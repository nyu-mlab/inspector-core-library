name: libinspector_test

on:
  workflow_dispatch:
  pull_request:
# Run every 30 days, just to confirm that the code is still working
  schedule:
    - cron: '0 0 */30 * *'

jobs:
  test-arm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: raspberrypi3
            image: arm32v7/python:3.11
            platform: linux/arm/v7
          - name: raspberrypi4
            image: arm64v8/python:3.11
            platform: linux/arm64
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Run tests in ${{ matrix.name }} container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ matrix.image }}
          options: --platform ${{ matrix.platform }} -v ${{ github.workspace }}:/workspace -w /workspace
          run: |
            export GITHUB_ACTIONS="true"
            apt-get update && apt-get install -y iproute2 net-tools
            python3 -m pip install --upgrade pip
            python3 -m pip install pytest
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            pytest src/tests

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - name: Checkout project sources
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest coverage ruff
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest coverage ruff
        if (Test-Path requirements.txt) { pip install -r requirements.txt }
      shell: pwsh

    # https://github.com/astral-sh/ruff
    - name: Lint with ruff
      run: |
        ruff check

    - name: Test with pytest and obtain code coverage
      env:
        GITHUB_ACTIONS: "true"
      run: |
        coverage run --source=src/libinspector -m pytest src/tests

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}